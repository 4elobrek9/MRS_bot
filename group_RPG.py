from aiogram import Router, types, Bot, F
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import InlineKeyboardButton
from aiogram.utils.markdown import hlink
import logging

from core.group.stat.manager import ProfileManager
from core.group.stat.shop_config import ShopConfig # –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–æ–Ω–∞—Ö
from database import set_user_active_background # –î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ñ–æ–Ω–∞

logger = logging.getLogger(__name__)

rpg_router = Router(name="rpg_router")

@rpg_router.message(F.text.lower() == "–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å")
async def show_inventory(message: types.Message, profile_manager: ProfileManager):
    logger.info(f"Received '–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å' command from user {message.from_user.id}.")
    user_id = message.from_user.id

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –∞–∫—Ç–∏–≤–Ω—ã–π —Ñ–æ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_profile = await profile_manager.get_user_profile(message.from_user)
    active_background_key = user_profile.get('active_background', 'default')

    # –ü–æ–ª—É—á–∞–µ–º —Ñ–æ–Ω—ã –∏–∑ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_backgrounds = await profile_manager.get_user_backgrounds_inventory(user_id)
    
    builder = InlineKeyboardBuilder()
    text = "üéí **–í–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å** üéí\n\n"
    
    # –†–∞–∑–¥–µ–ª "–§–æ–Ω—ã"
    text += "üñºÔ∏è **–§–æ–Ω—ã:**\n"
    if not user_backgrounds:
        text += "   –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Ñ–æ–Ω–æ–≤ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ.\n"
    else:
        for bg_key in user_backgrounds:
            bg_info = ShopConfig.SHOP_BACKGROUNDS.get(bg_key)
            if bg_info:
                status = " (–∞–∫—Ç–∏–≤–Ω—ã–π)" if bg_key == active_background_key else ""
                builder.row(
                    InlineKeyboardButton(
                        text=f"{bg_info['name']}{status}",
                        callback_data=f"activate_background:{bg_key}"
                    )
                )
            else:
                logger.warning(f"Unknown background key '{bg_key}' found in user {user_id} inventory.")
    
    if user_backgrounds: # –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —Ñ–æ–Ω—ã, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
        await message.reply(text, reply_markup=builder.as_markup(), parse_mode="Markdown")
    else:
        await message.reply(text, parse_mode="Markdown")

    logger.info(f"Inventory list sent to user {user_id}.")

@rpg_router.callback_query(F.data.startswith("activate_background:"))
async def activate_background_callback(callback: types.CallbackQuery, profile_manager: ProfileManager):
    original_command_message = callback.message.reply_to_message
    
    if not original_command_message or callback.from_user.id != original_command_message.from_user.id:
        await callback.answer("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ—Ç –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å.", show_alert=True)
        return

    await callback.answer() # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å "—á–∞—Å–∏–∫–∏"

    user_id = callback.from_user.id
    background_key_to_activate = callback.data.split(":")[1]

    logger.info(f"User {user_id} attempting to activate background: '{background_key_to_activate}'.")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ñ–æ–Ω –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_backgrounds_inventory = await profile_manager.get_user_backgrounds_inventory(user_id)

    if background_key_to_activate in user_backgrounds_inventory:
        await set_user_active_background(user_id, background_key_to_activate)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–æ–Ω–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–º–µ–Ω–∏
        bg_info = ShopConfig.SHOP_BACKGROUNDS.get(background_key_to_activate)
        bg_name = bg_info['name'] if bg_info else background_key_to_activate

        logger.info(f"User {user_id} successfully activated background '{bg_name}'.")
        await callback.message.edit_text(
            f"‚úÖ –§–æ–Ω '{bg_name}' —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å —Ç–µ–ø–µ—Ä—å –≤—ã–≥–ª—è–¥–∏—Ç –ø–æ-–Ω–æ–≤–æ–º—É.",
            reply_markup=None # –£–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
        )
    else:
        logger.warning(f"User {user_id} tried to activate background '{background_key_to_activate}' not in inventory.")
        await callback.message.edit_text(
            "‚ùå –≠—Ç–æ–≥–æ —Ñ–æ–Ω–∞ –Ω–µ—Ç –≤ –≤–∞—à–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.",
            reply_markup=None
        )

def setup_rpg_handlers(dp, bot, profile_manager):
    logger.info("Registering RPG router handlers.")
    dp.include_router(rpg_router)
    logger.info("RPG router included in Dispatcher.")
    return dp

